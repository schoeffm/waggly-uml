#!/usr/bin/env node
'use strict';

const program  = require('commander');
const _ = require('lodash');
const umlProcessor = require('./umlProcessor');
const fs = require('fs');
const pjson = require('../package.json');
const classProcessor = require('./dot/classDiagramProcessor');
const useCaseProcessor = require('./dot/useCaseDiagramProcessor');
const sequenceProcessor = require('./pic2plot/sequenceDiagramProcessor');
const notSupportedProcessor = require('./notSupportedDiagramProcessor');

const types = {};
types['class'] = classProcessor;
types['sequence'] = sequenceProcessor;
types['usecase'] = useCaseProcessor;
types[''] = notSupportedProcessor;

program
    .version(pjson.version)
    .option('-f, --format [svg|png|jpg]', "Optional: Determine your prefered output format (default is 'svg')")
    .option('-t, --type [class|sequence|usecase]', "Determines the graph-type to be created based on the given input (default is 'class')")
    .option('-c, --content <content>', "UML-image content as input-string")
    .option('-i, --input <path>', "Input UML description file")
    .option('-o, --output <path>', "Filename for the output diagram file")
    .option('-O, --orientation [LR|TD]', "Optional: Orientation (Left-To-Right or Top-Down) (default will be determined automatically)")
    .option('-S, --splines [ortho|spline]', "Optional: What kind of associations will be drawn (default is 'spline')")
    .option('-w, --waggly', "Turns on the waggly-mode")
    .option('--fontFamily <font>', "Set the output font-family (i.e. Purisa or Dadhand)")
    .option('--fontSize <size>', "Set the size of the font to be used")
    .parse(process.argv);

// ------------------------ private functions ---------------------

if (!process.argv.slice(2).length) {
    console.log('No command specified. See \'wuml --help\':');
    program.outputHelp();
    process.exit(1);
}

// default is the class-processor - otherwise you'll have to provide a sensible input
const processor = (program.type && types[program.type]) ? types[program.type] : classProcessor;

if (program.content) {
    processor.processString(program.content, program, (output) => { umlProcessor.processUmlOutput(output, program); });
} else if (program.input) {
    processor.processFile(program.input, program, (output) => { umlProcessor.processUmlOutput(output, program); });
} else {
    console.log('No input specified. See \'wuml --help\':');
    program.outputHelp();
    process.exit(1);
}