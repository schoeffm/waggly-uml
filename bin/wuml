#!/usr/bin/env node
'use strict';

var program  = require('commander');
var _ = require('lodash');
var umlProcessor = require('./umlProcessor');
var fs = require('fs');
var pjson = require('../package.json');
var classProcessor = require('./classDiagramProcessor');
var sequenceProcessor = require('./sequenceDiagramProcessor');
var notSupportedProcessor = require('./notSupportedDiagramProcessor');

var types = {};
types['class'] = classProcessor;
types['sequence'] = sequenceProcessor;
types[''] = notSupportedProcessor;

program
    .version(pjson.version)
    .option('-f, --format [svg|png]', "Determine your prefered output format (default id 'svg')")
    .option('-t, --type [class|sequence]', "Determines the graph-type to be created based on the given input (default is 'class')")
    .option('-c, --content <content>', "UML-image content as input-string")
    .option('-i, --input <path>', "Input UML description file")
    .option('-o, --output <path>', "Filename for the output diagram file")
    .option('-w, --waggly', "Turns on the waggly-mode")
    .option('--fontFamily <font>', "Set the output font-family (i.e. Purisa or Dadhand)")
    .option('--fontSize <size>', "Set the size of the font to be used")
    .parse(process.argv);

// ------------------------ private functions ---------------------



if (!process.argv.slice(2).length) {
    console.log('No command specified. See \'wuml --help\':');
    program.outputHelp();
    process.exit(1);
}

// default is the class-processor - otherwise you'll have to provide a sensible input
var processor = (program.type && types[program.type]) ? types[program.type] : classProcessor;

if (program.content) {
    processor.processString(program.content, function(output) { umlProcessor.processUmlOutput(output, program); });
} else if (program.input) {
    processor.processFile(program.input, function(output) { umlProcessor.processUmlOutput(output, program); });
} else {
    console.log('No input specified. See \'wuml --help\':');
    program.outputHelp();
    process.exit(1);
}